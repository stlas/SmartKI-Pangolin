# SmartKI Public Nginx Configuration
# For deployment on 82.165.68.138 (public server)
# Routes public domains to local network services

# Rate limiting
limit_req_zone $binary_remote_addr zone=public_limit:10m rate=50r/s;

# Main domain - haossl.de
server {
    listen 80;
    server_name haossl.de www.haossl.de;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Logging
    access_log /var/log/nginx/haossl_public_access.log combined;
    error_log /var/log/nginx/haossl_public_error.log warn;
    
    location / {
        limit_req zone=public_limit burst=100 nodelay;
        
        # Proxy to local network through your router/VPN
        proxy_pass http://192.168.178.103;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Extended timeouts for internet connection
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    # Fallback for connection issues
    error_page 502 503 504 /maintenance.html;
    location = /maintenance.html {
        root /var/www/html;
        internal;
    }
}

# Karakeep (Public) - 192.168.178.145
server {
    listen 80;
    server_name karakeep.haossl.de;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Logging
    access_log /var/log/nginx/karakeep_public_access.log combined;
    error_log /var/log/nginx/karakeep_public_error.log warn;
    
    location / {
        limit_req zone=public_limit burst=100 nodelay;
        
        proxy_pass http://192.168.178.145;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    error_page 502 503 504 /maintenance.html;
}

# Tandoor (Public) - 192.168.178.140
server {
    listen 80;
    server_name tandoor.haossl.de;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Logging
    access_log /var/log/nginx/tandoor_public_access.log combined;
    error_log /var/log/nginx/tandoor_public_error.log warn;
    
    location / {
        limit_req zone=public_limit burst=100 nodelay;
        
        proxy_pass http://192.168.178.140;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    error_page 502 503 504 /maintenance.html;
}

# Default server (catch unmatched domains)
server {
    listen 80 default_server;
    server_name _;
    
    # Redirect unknown subdomains to main site
    return 301 https://haossl.de$request_uri;
}